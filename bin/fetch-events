#!/usr/bin/env ruby

require 'optparse'

$options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: fetch-events [$options]"
  opts.on("-S", "--since DATE", "Fetch events modified since YYYY-DD-MM") do |s|
    $options[:since] = s
  end
  opts.on("-D", "--[no-]dry-run", "Dry run (don't update DB)") do |d|
    $options[:dryrun] = d
  end
  opts.on("-V", "--[no-]verbose", "Run verbosely") do |v|
    $options[:verbose] = v
  end
  opts.on_tail("-H", "--helpme", "Display command-line $options") do
    puts opts
    exit
  end
end.parse!

modified_since = $options[:since] ? Date.parse($options[:since]) : 1.week.ago.to_date
$stderr.puts "fetching events modified since #{modified_since}" if $options[:verbose]
xml = EventFetcher.event_profiles(modified_since)
Event.destroy_all unless $options[:dryrun]
Event.from_xml(xml).each do |event|
  $stderr.puts "origin_ident=#{event.origin_ident} name=[#{event.name}] setupable? #{event.setupable?}" if $options[:verbose]
  if event.setupable? && !$options[:dryrun]
    event.save!
  end
end
